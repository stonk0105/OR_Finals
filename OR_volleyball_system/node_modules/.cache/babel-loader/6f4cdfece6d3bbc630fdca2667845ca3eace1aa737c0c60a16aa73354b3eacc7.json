{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\OR-volleyball\\\\src\\\\ScheduleGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport FileSaver from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScheduleGenerator() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [startDate, setStartDate] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleFileUpload = e => {\n    const uploadedFile = e.target.files[0];\n    setFile(uploadedFile);\n  };\n  const generateGroups = (levelSheet, refTeamSheet) => {\n    // 整理隊伍等級資料\n    const teamLevels = {};\n    levelSheet.forEach(row => {\n      teamLevels[row.team_name] = row.level;\n    });\n\n    // 按等級分組隊伍\n    const teamsByLevel = {\n      1: [],\n      2: [],\n      3: [],\n      4: []\n    };\n    Object.entries(teamLevels).forEach(([team, level]) => {\n      teamsByLevel[level].push(team);\n    });\n\n    // 檢查每個等級的隊伍數量\n    const requiredTeamsPerLevel = 8;\n    for (let level = 1; level <= 4; level++) {\n      if (teamsByLevel[level].length < requiredTeamsPerLevel) {\n        throw new Error(`等級 ${level} 的隊伍數量不足：需要 ${requiredTeamsPerLevel} 隊，但只有 ${teamsByLevel[level].length} 隊`);\n      }\n    }\n\n    // 隨機分組\n    const groupedTeams = {};\n    const groups = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\n\n    // 為 A-H 組分配隊伍\n    groups.forEach(group => {\n      const selectedTeams = [];\n      for (let level = 1; level <= 4; level++) {\n        const randomIndex = Math.floor(Math.random() * teamsByLevel[level].length);\n        const selectedTeam = teamsByLevel[level][randomIndex];\n        selectedTeams.push(selectedTeam);\n        teamsByLevel[level] = teamsByLevel[level].filter(team => team !== selectedTeam);\n      }\n      groupedTeams[group] = selectedTeams;\n    });\n\n    // 處理剩餘隊伍\n    const remainingTeams = [];\n    for (let level = 1; level <= 4; level++) {\n      remainingTeams.push(...teamsByLevel[level]);\n    }\n\n    // 為 I 組選擇隊伍\n    if (remainingTeams.length >= 3) {\n      const selectedTeams = [];\n      const availableLevels = [1, 2, 3].filter(level => teamsByLevel[level].length > 0);\n      if (availableLevels.length >= 3) {\n        for (let i = 0; i < 3; i++) {\n          const level = availableLevels[i];\n          const randomIndex = Math.floor(Math.random() * teamsByLevel[level].length);\n          const selectedTeam = teamsByLevel[level][randomIndex];\n          selectedTeams.push(selectedTeam);\n          teamsByLevel[level] = teamsByLevel[level].filter(team => team !== selectedTeam);\n        }\n      } else {\n        // 如果無法從不同等級選擇，則隨機選擇3隊\n        for (let i = 0; i < 3; i++) {\n          const randomIndex = Math.floor(Math.random() * remainingTeams.length);\n          selectedTeams.push(remainingTeams[randomIndex]);\n          remainingTeams.splice(randomIndex, 1);\n        }\n      }\n      groupedTeams['I'] = selectedTeams;\n    }\n\n    // 剩餘隊伍放入 J 組\n    const finalRemainingTeams = [];\n    for (let level = 1; level <= 4; level++) {\n      finalRemainingTeams.push(...teamsByLevel[level]);\n    }\n    if (finalRemainingTeams.length > 0) {\n      groupedTeams['J'] = finalRemainingTeams;\n    }\n    return groupedTeams;\n  };\n  const generateRefereeConflicts = (groupedTeams, refTeamSheet) => {\n    const refConflicts = {};\n    const referees = [...new Set(refTeamSheet.map(row => row.name))];\n    referees.forEach(ref => {\n      refConflicts[ref] = {};\n      const conflictedTeams = new Set(refTeamSheet.filter(row => row.name === ref).map(row => row.dept));\n      Object.entries(groupedTeams).forEach(([group, teams]) => {\n        const hasConflict = teams.some(team => conflictedTeams.has(team));\n        refConflicts[ref][group] = hasConflict ? 0 : 1;\n      });\n    });\n    return refConflicts;\n  };\n  const handleGenerateSchedule = async () => {\n    if (!file || !startDate) {\n      alert(\"請上傳 Excel 並輸入開始日期！\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const data = await file.arrayBuffer();\n      const workbook = XLSX.read(data);\n\n      // 讀取必要的資料表\n      const levelSheet = XLSX.utils.sheet_to_json(workbook.Sheets['level']);\n      const refTeamSheet = XLSX.utils.sheet_to_json(workbook.Sheets['ref_team']);\n\n      // 生成分組\n      const groupedTeams = generateGroups(levelSheet, refTeamSheet);\n\n      // 生成裁判衝突表\n      const refConflicts = generateRefereeConflicts(groupedTeams, refTeamSheet);\n\n      // 創建分組資料\n      const groupingData = [];\n      Object.entries(groupedTeams).forEach(([group, teams]) => {\n        teams.forEach(team => {\n          groupingData.push({\n            Group: group,\n            Team: team,\n            Level: levelSheet.find(row => row.team_name === team).level\n          });\n        });\n      });\n\n      // 創建新的工作簿\n      const newWorkbook = XLSX.utils.book_new();\n\n      // 添加分組資料\n      const groupingSheet = XLSX.utils.json_to_sheet(groupingData);\n      XLSX.utils.book_append_sheet(newWorkbook, groupingSheet, \"Groupings\");\n\n      // 添加裁判衝突表\n      const refConflictData = Object.entries(refConflicts).map(([ref, conflicts]) => ({\n        Referee: ref,\n        ...conflicts\n      }));\n      const refConflictSheet = XLSX.utils.json_to_sheet(refConflictData);\n      XLSX.utils.book_append_sheet(newWorkbook, refConflictSheet, \"Referee Conflicts\");\n\n      // 輸出檔案\n      const wbout = XLSX.write(newWorkbook, {\n        type: \"array\",\n        bookType: \"xlsx\"\n      });\n      FileSaver.saveAs(new Blob([wbout], {\n        type: \"application/octet-stream\"\n      }), \"group_generate.xlsx\");\n      alert(\"分組和裁判衝突表已生成！請繼續上傳檔案進行排程。\");\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(error.message || \"生成過程中發生錯誤，請檢查檔案格式是否正確。\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-stripe font-sans\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-xl rounded-2xl p-8 w-full max-w-xl border-4 border-yellow-400 relative z-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-extrabold text-blue-900 text-center mb-6\",\n        children: \"\\uD83C\\uDFD0 \\u53F0\\u5927\\u76C3\\u6392\\u7403\\u8CFD\\u7A0B\\u6392\\u5B9A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-blue-900 font-extrabold mb-2\",\n          children: \"\\uD83D\\uDCC2 \\u4E0A\\u50B3 Excel \\u6A94\\u6848\\uFF1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".xlsx\",\n          onChange: handleFileUpload,\n          className: \"w-full p-2 border-2 border-yellow-300 rounded-md bg-blue-50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-blue-900 font-extrabold mb-2\",\n          children: \"\\uD83D\\uDCC5 \\u8F38\\u5165\\u8D77\\u59CB\\u65E5\\u671F\\uFF1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value),\n          className: \"w-full p-2 border-2 border-yellow-300 rounded-md bg-blue-50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateSchedule,\n        disabled: loading,\n        className: `w-full py-3 px-4 bg-yellow-400 hover:bg-yellow-500 text-blue-900 font-bold rounded-lg transition duration-200 shadow-md ${loading ? 'opacity-50 cursor-not-allowed' : ''}`,\n        children: loading ? '生成中...' : '生成分組和裁判衝突表'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(ScheduleGenerator, \"6AG2N1MX8bNj+aLXzXb1VtY2/tE=\");\n_c = ScheduleGenerator;\nexport default ScheduleGenerator;\nvar _c;\n$RefreshReg$(_c, \"ScheduleGenerator\");","map":{"version":3,"names":["React","useState","XLSX","FileSaver","jsxDEV","_jsxDEV","ScheduleGenerator","_s","file","setFile","startDate","setStartDate","loading","setLoading","handleFileUpload","e","uploadedFile","target","files","generateGroups","levelSheet","refTeamSheet","teamLevels","forEach","row","team_name","level","teamsByLevel","Object","entries","team","push","requiredTeamsPerLevel","length","Error","groupedTeams","groups","group","selectedTeams","randomIndex","Math","floor","random","selectedTeam","filter","remainingTeams","availableLevels","i","splice","finalRemainingTeams","generateRefereeConflicts","refConflicts","referees","Set","map","name","ref","conflictedTeams","dept","teams","hasConflict","some","has","handleGenerateSchedule","alert","data","arrayBuffer","workbook","read","utils","sheet_to_json","Sheets","groupingData","Group","Team","Level","find","newWorkbook","book_new","groupingSheet","json_to_sheet","book_append_sheet","refConflictData","conflicts","Referee","refConflictSheet","wbout","write","type","bookType","saveAs","Blob","error","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","value","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/OR-volleyball/src/ScheduleGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport FileSaver from 'file-saver';\r\n\r\nfunction ScheduleGenerator() {\r\n  const [file, setFile] = useState(null);\r\n  const [startDate, setStartDate] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleFileUpload = (e) => {\r\n    const uploadedFile = e.target.files[0];\r\n    setFile(uploadedFile);\r\n  };\r\n\r\n  const generateGroups = (levelSheet, refTeamSheet) => {\r\n    // 整理隊伍等級資料\r\n    const teamLevels = {};\r\n    levelSheet.forEach(row => {\r\n      teamLevels[row.team_name] = row.level;\r\n    });\r\n\r\n    // 按等級分組隊伍\r\n    const teamsByLevel = {1: [], 2: [], 3: [], 4: []};\r\n    Object.entries(teamLevels).forEach(([team, level]) => {\r\n      teamsByLevel[level].push(team);\r\n    });\r\n\r\n    // 檢查每個等級的隊伍數量\r\n    const requiredTeamsPerLevel = 8;\r\n    for (let level = 1; level <= 4; level++) {\r\n      if (teamsByLevel[level].length < requiredTeamsPerLevel) {\r\n        throw new Error(`等級 ${level} 的隊伍數量不足：需要 ${requiredTeamsPerLevel} 隊，但只有 ${teamsByLevel[level].length} 隊`);\r\n      }\r\n    }\r\n\r\n    // 隨機分組\r\n    const groupedTeams = {};\r\n    const groups = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\r\n    \r\n    // 為 A-H 組分配隊伍\r\n    groups.forEach(group => {\r\n      const selectedTeams = [];\r\n      for (let level = 1; level <= 4; level++) {\r\n        const randomIndex = Math.floor(Math.random() * teamsByLevel[level].length);\r\n        const selectedTeam = teamsByLevel[level][randomIndex];\r\n        selectedTeams.push(selectedTeam);\r\n        teamsByLevel[level] = teamsByLevel[level].filter(team => team !== selectedTeam);\r\n      }\r\n      groupedTeams[group] = selectedTeams;\r\n    });\r\n\r\n    // 處理剩餘隊伍\r\n    const remainingTeams = [];\r\n    for (let level = 1; level <= 4; level++) {\r\n      remainingTeams.push(...teamsByLevel[level]);\r\n    }\r\n\r\n    // 為 I 組選擇隊伍\r\n    if (remainingTeams.length >= 3) {\r\n      const selectedTeams = [];\r\n      const availableLevels = [1, 2, 3].filter(level => teamsByLevel[level].length > 0);\r\n      \r\n      if (availableLevels.length >= 3) {\r\n        for (let i = 0; i < 3; i++) {\r\n          const level = availableLevels[i];\r\n          const randomIndex = Math.floor(Math.random() * teamsByLevel[level].length);\r\n          const selectedTeam = teamsByLevel[level][randomIndex];\r\n          selectedTeams.push(selectedTeam);\r\n          teamsByLevel[level] = teamsByLevel[level].filter(team => team !== selectedTeam);\r\n        }\r\n      } else {\r\n        // 如果無法從不同等級選擇，則隨機選擇3隊\r\n        for (let i = 0; i < 3; i++) {\r\n          const randomIndex = Math.floor(Math.random() * remainingTeams.length);\r\n          selectedTeams.push(remainingTeams[randomIndex]);\r\n          remainingTeams.splice(randomIndex, 1);\r\n        }\r\n      }\r\n      groupedTeams['I'] = selectedTeams;\r\n    }\r\n\r\n    // 剩餘隊伍放入 J 組\r\n    const finalRemainingTeams = [];\r\n    for (let level = 1; level <= 4; level++) {\r\n      finalRemainingTeams.push(...teamsByLevel[level]);\r\n    }\r\n    if (finalRemainingTeams.length > 0) {\r\n      groupedTeams['J'] = finalRemainingTeams;\r\n    }\r\n\r\n    return groupedTeams;\r\n  };\r\n\r\n  const generateRefereeConflicts = (groupedTeams, refTeamSheet) => {\r\n    const refConflicts = {};\r\n    const referees = [...new Set(refTeamSheet.map(row => row.name))];\r\n\r\n    referees.forEach(ref => {\r\n      refConflicts[ref] = {};\r\n      const conflictedTeams = new Set(\r\n        refTeamSheet\r\n          .filter(row => row.name === ref)\r\n          .map(row => row.dept)\r\n      );\r\n\r\n      Object.entries(groupedTeams).forEach(([group, teams]) => {\r\n        const hasConflict = teams.some(team => conflictedTeams.has(team));\r\n        refConflicts[ref][group] = hasConflict ? 0 : 1;\r\n      });\r\n    });\r\n\r\n    return refConflicts;\r\n  };\r\n\r\n  const handleGenerateSchedule = async () => {\r\n    if (!file || !startDate) {\r\n      alert(\"請上傳 Excel 並輸入開始日期！\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const data = await file.arrayBuffer();\r\n      const workbook = XLSX.read(data);\r\n      \r\n      // 讀取必要的資料表\r\n      const levelSheet = XLSX.utils.sheet_to_json(workbook.Sheets['level']);\r\n      const refTeamSheet = XLSX.utils.sheet_to_json(workbook.Sheets['ref_team']);\r\n\r\n      // 生成分組\r\n      const groupedTeams = generateGroups(levelSheet, refTeamSheet);\r\n      \r\n      // 生成裁判衝突表\r\n      const refConflicts = generateRefereeConflicts(groupedTeams, refTeamSheet);\r\n\r\n      // 創建分組資料\r\n      const groupingData = [];\r\n      Object.entries(groupedTeams).forEach(([group, teams]) => {\r\n        teams.forEach(team => {\r\n          groupingData.push({\r\n            Group: group,\r\n            Team: team,\r\n            Level: levelSheet.find(row => row.team_name === team).level\r\n          });\r\n        });\r\n      });\r\n\r\n      // 創建新的工作簿\r\n      const newWorkbook = XLSX.utils.book_new();\r\n      \r\n      // 添加分組資料\r\n      const groupingSheet = XLSX.utils.json_to_sheet(groupingData);\r\n      XLSX.utils.book_append_sheet(newWorkbook, groupingSheet, \"Groupings\");\r\n\r\n      // 添加裁判衝突表\r\n      const refConflictData = Object.entries(refConflicts).map(([ref, conflicts]) => ({\r\n        Referee: ref,\r\n        ...conflicts\r\n      }));\r\n      const refConflictSheet = XLSX.utils.json_to_sheet(refConflictData);\r\n      XLSX.utils.book_append_sheet(newWorkbook, refConflictSheet, \"Referee Conflicts\");\r\n\r\n      // 輸出檔案\r\n      const wbout = XLSX.write(newWorkbook, { type: \"array\", bookType: \"xlsx\" });\r\n      FileSaver.saveAs(new Blob([wbout], { type: \"application/octet-stream\" }), \"group_generate.xlsx\");\r\n\r\n      alert(\"分組和裁判衝突表已生成！請繼續上傳檔案進行排程。\");\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(error.message || \"生成過程中發生錯誤，請檢查檔案格式是否正確。\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-stripe font-sans\">\r\n      <div className=\"bg-white shadow-xl rounded-2xl p-8 w-full max-w-xl border-4 border-yellow-400 relative z-10\">\r\n        <h1 className=\"text-3xl font-extrabold text-blue-900 text-center mb-6\">🏐 台大盃排球賽程排定</h1>\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-blue-900 font-extrabold mb-2\">📂 上傳 Excel 檔案：</label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\".xlsx\"\r\n            onChange={handleFileUpload}\r\n            className=\"w-full p-2 border-2 border-yellow-300 rounded-md bg-blue-50\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-blue-900 font-extrabold mb-2\">📅 輸入起始日期：</label>\r\n          <input\r\n            type=\"date\"\r\n            value={startDate}\r\n            onChange={(e) => setStartDate(e.target.value)}\r\n            className=\"w-full p-2 border-2 border-yellow-300 rounded-md bg-blue-50\"\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          onClick={handleGenerateSchedule}\r\n          disabled={loading}\r\n          className={`w-full py-3 px-4 bg-yellow-400 hover:bg-yellow-500 text-blue-900 font-bold rounded-lg transition duration-200 shadow-md ${\r\n            loading ? 'opacity-50 cursor-not-allowed' : ''\r\n          }`}\r\n        >\r\n          {loading ? '生成中...' : '生成分組和裁判衝突表'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScheduleGenerator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}